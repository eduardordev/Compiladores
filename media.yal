(* La sección {header} es opcional *)

(* Definiendo los tokens a usar en este archivo *)

(* Definiendo el break de línea *)
let delim = [' ''\t''\n']
let ws = delim+

(* Segundo token: expresión regular que acepte números *)
let digit = ['0'-'9']

(* Tercer token: hacer un digito *)
let digits = digit+

(* Séptimo token: hacer los signos *)
let sign = ['+'|'-']

(* Octavo token: hacer un número *)
let number = (sign)digits(,digits)

(* token: expresión regular que solo acepte letras *)
let letter = ['a'-'z' 'A'-'Z']

(* Noveno token: expresión regular que acepte identificadores *)
let id = letter (letter|digit)*

(* Definiendo las letras *)

(* Definiendo las letras *)
let letterh = ['A'-'F']
let lettersh = letterh+

(* Definiendo los números *)
let digite = ['0'-'9']
let digitse = digite+

(* Definiendo los números *)
let hexdigit = ((letterh)(digitse))|((digitse)(letterh))*

rule gettoken = 
    "IF" {return "IF"}
    | "FOR" {return "FOR"}
    | "+" {return "SUMA"}
    | "-" {return "RESTA"}
    | "*" {return "MULTIPLICACION"}
    | "/" {return "DIVISION"}
    | "(" {return "PARENTESIS_IZQUIERDO"}
    | ")" {return "PARENTESIS_DERECHO"}
    | "^" {return "POTENCIA"}
    | id {return "IDENTIFICADOR"}
    | digits {return "DIGIT"}
    | number {return "NÚMERO CON DECIMAL"}
    | hexdigit {return "NÚMERO HEXADECIMAL"}
